{
    "id": "inputText",
    "label": "InputText",
    "description": "InputText is an extension to standard input element with theming and keyfiltering.",
    "methods": {
        "label": "Methods",
        "shortLabel": "Methods",
        "description": "Defines methods that can be accessed by the component's reference.",
        "values": [
            {
                "name": "getElement",
                "parameters": [],
                "returnType": "HTMLInputElement",
                "description": "Return root element."
            },
            {
                "name": "focus",
                "parameters": [
                    {
                        "name": "scrollTo",
                        "type": "boolean",
                        "description": "flag to control whether to scroll to the element, false by default."
                    }
                ],
                "returnType": "void",
                "description": "Focus an input element if it does not already have focus."
            },
            {
                "name": "blur",
                "parameters": [],
                "returnType": "void",
                "description": "Blur an input element."
            }
        ]
    },
    "props": {
        "label": "InputTextProps",
        "shortLabel": "Props",
        "description": "Defines valid properties in InputText component. In addition to these, all properties of HTMLInputElement can be used in this component.",
        "values": [
            {
                "name": "class",
                "optional": true,
                "readonly": false,
                "type": "string | null",
                "default": "null",
                "description": "CSS classes to add to root element."
            },
            {
                "name": "disabled",
                "optional": true,
                "readonly": false,
                "type": "boolean",
                "default": "false",
                "description": "When present, it specifies that the element should be disabled."
            },
            {
                "name": "keyfilter",
                "optional": true,
                "readonly": false,
                "type": "KeyFilterType | null",
                "default": "null",
                "description": "Format definition of the keys to block."
            },
            {
                "name": "invalid",
                "optional": true,
                "readonly": false,
                "type": "boolean",
                "default": "false",
                "description": "When present, it specifies that the component should have invalid state style."
            },
            {
                "name": "pt",
                "optional": true,
                "readonly": false,
                "type": "InputTextPassThroughOptions",
                "default": "null",
                "description": "Uses to pass attributes to DOM elements inside the component."
            },
            {
                "name": "ptOptions",
                "optional": true,
                "readonly": false,
                "type": "InputTextPassThroughMethodOptions",
                "default": "null",
                "description": "Used to configure passthrough(pt) options of the component."
            },
            {
                "name": "style",
                "optional": true,
                "readonly": false,
                "type": "string | CssObject | null",
                "default": "null",
                "description": "Style to add to root element."
            },
            {
                "name": "size",
                "optional": true,
                "readonly": false,
                "type": "string | number",
                "default": "null",
                "description": "Size of the input."
            },
            {
                "name": "tooltip",
                "optional": true,
                "readonly": false,
                "type": "string | null",
                "default": "null",
                "description": "Content of the tooltip."
            },
            {
                "name": "tooltipOptions",
                "optional": true,
                "readonly": false,
                "type": "TooltipOptions",
                "default": "null",
                "description": "Configuration of the tooltip, refer to the tooltip documentation for more information."
            },
            {
                "name": "unstyled",
                "optional": true,
                "readonly": false,
                "type": "boolean",
                "default": "false",
                "description": "When enabled, it removes component related styles in the core."
            },
            {
                "name": "validateOnly",
                "optional": true,
                "readonly": false,
                "type": "boolean",
                "default": "false",
                "description": "When enabled, instead of blocking keys, input is validated internally to test against the regular expression."
            },
            {
                "name": "value",
                "optional": true,
                "readonly": false,
                "type": "null | string",
                "default": "null",
                "description": "The value of component"
            },
            {
                "name": "variant",
                "optional": true,
                "readonly": false,
                "type": "\"filled\" | \"outlined\"",
                "default": "outlined",
                "description": "Specifies the input variant of the component."
            }
        ]
    },
    "events": {
        "label": "Events",
        "shortLabel": "Events",
        "description": "Add event listener to the component.",
        "values": [
            {
                "name": "on:focus",
                "parameters": [
                    {
                        "name": "event",
                        "optional": false,
                        "type": "FocusEvent",
                        "description": "Browser event"
                    }
                ],
                "description": "Focus event listener"
            },
            {
                "name": "on:blur",
                "parameters": [
                    {
                        "name": "event",
                        "optional": false,
                        "type": "FocusEvent",
                        "description": "Browser event"
                    }
                ],
                "description": "Blur event listener"
            },
            {
                "name": "on:keydown",
                "parameters": [
                    {
                        "name": "event",
                        "optional": false,
                        "type": "KeyboardEvent",
                        "description": "Browser event"
                    }
                ],
                "description": "Key Down event listener"
            },
            {
                "name": "on:keyup",
                "parameters": [
                    {
                        "name": "event",
                        "optional": false,
                        "type": "KeyboardEvent",
                        "description": "Browser event"
                    }
                ],
                "description": "Key Up event listener"
            },
            {
                "name": "on:input",
                "parameters": [
                    {
                        "name": "event",
                        "optional": false,
                        "type": "InputEvent",
                        "description": "Browser event"
                    }
                ],
                "description": "Input event listener"
            },
            {
                "name": "on:beforeinput",
                "parameters": [
                    {
                        "name": "event",
                        "optional": false,
                        "type": "InputEvent",
                        "description": "Browser event"
                    }
                ],
                "description": "Befote Input event listener"
            },
            {
                "name": "on:validatedinput",
                "parameters": [
                    {
                        "name": "event",
                        "optional": false,
                        "type": "ValidatedInputEvent",
                        "description": "Custom event : CustomEvent<{ event: Event; valid: boolean}>"
                    }
                ],
                "description": "Validated Input event listener. Invoke while typing value on input"
            }
        ]
    },
    "callbacks": {
        "label": "Callbacks",
        "shortLabel": "Callbacks",
        "description": "Defines callbacks that determine the behavior of the component based on a given condition or report the actions that the component takes.",
        "values": []
    },
    "ptMethodOptions": {
        "label": "InputTextPassThroughMethodOptions",
        "shortLabel": "PtMethodOptions",
        "description": "Custom passthrough(pt) option method.",
        "relatedProp": "",
        "callbacks": [],
        "values": [
            {
                "name": "props",
                "optional": false,
                "readonly": false,
                "type": "InputTextProps"
            },
            {
                "name": "context",
                "optional": false,
                "readonly": false,
                "type": "InputTextContext"
            }
        ]
    },
    "ptOptions": {
        "label": "InputTextPassThroughOptions",
        "shortLabel": "PtOptions",
        "description": "Custom passthrough(pt) options.",
        "relatedProp": "pt",
        "callbacks": [],
        "values": [
            {
                "name": "root",
                "optional": true,
                "readonly": false,
                "type": "Input",
                "description": "Uses to pass attributes to the root's DOM element."
            },
            {
                "name": "tooltip",
                "optional": true,
                "readonly": false,
                "type": "TooltipPassThrough",
                "description": "Uses to pass attributes to the Tooltip component."
            }
        ]
    },
    "meta": {
        "RootType": "Input",
        "omitAttributes": "'style'",
        "icon": false,
        "tooltip": false,
        "svelteComponent": false
    },
    "types": {
        "label": "Props types",
        "shortLabel": "Props types",
        "description": "Defines types used by properties of the InputText component.",
        "values": []
    },
    "ptContext": {
        "label": "InputTextContext",
        "shortLabel": "Context",
        "description": "Defines current options in InputText component.",
        "relatedProp": "",
        "callbacks": [],
        "values": [
            {
                "name": "filled",
                "optional": false,
                "readonly": false,
                "type": "boolean",
                "description": "Current filled state of the component as a boolean."
            },
            {
                "name": "disabled",
                "optional": false,
                "readonly": false,
                "type": "boolean",
                "description": "Current disabled state of the component as a boolean."
            }
        ]
    }
}

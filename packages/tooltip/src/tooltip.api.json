{
    "id": "tooltip",
    "label": "Tooltip",
    "description": "Tooltip functionality is integrated within various PrimeReact components.",
    "methods": {
        "label": "Methods",
        "shortLabel": "Methods",
        "description": "Defines methods that can be accessed by the component's reference.",
        "values": []
    },
    "props": {
        "label": "TooltipOptions",
        "shortLabel": "options",
        "description": "Defines valid properties of tooltipOptions attribute.",
        "values": [
            {
                "name": "at",
                "optional": true,
                "readonly": false,
                "type": "string | null",
                "default": "null",
                "description": "Defines which position on the target element to align the positioned tooltip."
            },
            {
                "name": "autoHide",
                "optional": true,
                "readonly": false,
                "type": "boolean",
                "default": "true",
                "description": "Whether to hide tooltip when hovering over tooltip content."
            },
            {
                "name": "autoZIndex",
                "optional": true,
                "readonly": false,
                "type": "boolean",
                "default": "true",
                "description": "Whether to automatically manage layering."
            },
            {
                "name": "baseZIndex",
                "optional": true,
                "readonly": false,
                "type": "number",
                "default": "0",
                "description": "Base zIndex value to use in layering."
            },
            {
                "name": "class",
                "optional": true,
                "readonly": false,
                "type": "string | null",
                "default": "null",
                "description": "CSS classes to add to root element."
            },
            {
                "name": "closeOnEscape",
                "optional": true,
                "readonly": false,
                "type": "boolean",
                "default": "false",
                "description": "Specifies if pressing escape key should hide the tooltip."
            },
            {
                "name": "content",
                "optional": true,
                "readonly": false,
                "type": "typeof SvelteComponent | null",
                "default": "null",
                "description": "Content to be displayed in tooltip."
            },
            {
                "name": "disabled",
                "optional": true,
                "readonly": false,
                "type": "boolean",
                "default": "false",
                "description": "When present, it specifies that the tooltip should be hidden."
            },
            {
                "name": "event",
                "optional": true,
                "readonly": false,
                "type": "\"both\" | \"focus\" | \"hover\"",
                "default": "hover",
                "description": "Event to show the tooltip."
            },
            {
                "name": "hideDelay",
                "optional": true,
                "readonly": false,
                "type": "number",
                "default": "0",
                "description": "Delay to hide the tooltip in milliseconds."
            },
            {
                "name": "hideEvent",
                "optional": true,
                "readonly": false,
                "type": "string | null",
                "default": "mouseleave",
                "description": "Event to hide the tooltip if the event property is empty."
            },
            {
                "name": "mouseTrack",
                "optional": true,
                "readonly": false,
                "type": "boolean",
                "default": "false",
                "description": "Whether the tooltip will follow the mouse."
            },
            {
                "name": "mouseTrackLeft",
                "optional": true,
                "readonly": false,
                "type": "number",
                "default": "5",
                "description": "Defines left position of the tooltip in relation to the mouse when the mouseTrack is enabled."
            },
            {
                "name": "mouseTrackTop",
                "optional": true,
                "readonly": false,
                "type": "number",
                "default": "5",
                "description": "Defines top position of the tooltip in relation to the mouse when the mouseTrack is enabled."
            },
            {
                "name": "my",
                "optional": true,
                "readonly": false,
                "type": "string | null",
                "default": "null",
                "description": "Defines which position on the tooltip being positioned to align with the target element."
            },
            {
                "name": "position",
                "optional": true,
                "readonly": false,
                "type": "\"left\" | \"top\" | \"bottom\" | \"right\" | \"mouse\"",
                "default": "right",
                "description": "Position of the tooltip."
            },
            {
                "name": "pt",
                "optional": true,
                "readonly": false,
                "type": "TooltipPassThroughOptions",
                "default": "null",
                "description": "Uses to pass attributes to DOM elements inside the component."
            },
            {
                "name": "ptOptions",
                "optional": true,
                "readonly": false,
                "type": "TooltipPassThroughMethodOptions",
                "default": "null",
                "description": "Used to configure passthrough(pt) options of the component."
            },
            {
                "name": "showDelay",
                "optional": true,
                "readonly": false,
                "type": "number",
                "default": "0",
                "description": "Delay to show the tooltip in milliseconds."
            },
            {
                "name": "showEvent",
                "optional": true,
                "readonly": false,
                "type": "string | null",
                "default": "mouseenter",
                "description": "Event to show the tooltip if the event property is empty."
            },
            {
                "name": "showOnDisabled",
                "optional": true,
                "readonly": false,
                "type": "boolean",
                "default": "false",
                "description": "Whether to show tooltip for disabled elements."
            },
            {
                "name": "style",
                "optional": true,
                "readonly": false,
                "type": "string | CssObject | null",
                "default": "null",
                "description": "Style of the tooltip."
            },
            {
                "name": "target",
                "optional": true,
                "readonly": false,
                "type": "string | string[] | HTMLElement | RefObject<HTMLElement>",
                "default": "null",
                "description": "Target element on global tooltip option."
            },
            {
                "name": "unstyled",
                "optional": true,
                "readonly": false,
                "type": "boolean",
                "default": "false",
                "description": "When enabled, it removes component related styles in the core."
            },
            {
                "name": "updateDelay",
                "optional": true,
                "readonly": false,
                "type": "number",
                "default": "0",
                "description": "Delay to update the tooltip in milliseconds."
            }
        ]
    },
    "callbacks": {
        "label": "Callbacks",
        "shortLabel": "Callbacks",
        "description": "Defines callbacks that determine the behavior of the component based on a given condition or report the actions that the component takes.",
        "values": [
            {
                "name": "onBeforeHide",
                "parameters": [
                    {
                        "name": "event",
                        "optional": false,
                        "type": "TooltipEvent",
                        "description": "Browser event"
                    }
                ],
                "returnType": "void",
                "description": "Callback to invoke before the tooltip is hidden."
            },
            {
                "name": "onBeforeShow",
                "parameters": [
                    {
                        "name": "event",
                        "optional": false,
                        "type": "TooltipEvent",
                        "description": "Browser event"
                    }
                ],
                "returnType": "void",
                "description": "Callback to invoke before the tooltip is shown."
            },
            {
                "name": "onHide",
                "parameters": [
                    {
                        "name": "event",
                        "optional": false,
                        "type": "TooltipEvent",
                        "description": "Browser event"
                    }
                ],
                "returnType": "void",
                "description": "Callback to invoke when the tooltip is hidden."
            },
            {
                "name": "onShow",
                "parameters": [
                    {
                        "name": "event",
                        "optional": false,
                        "type": "TooltipEvent",
                        "description": "Browser event"
                    }
                ],
                "returnType": "void",
                "description": "Callback to invoke when the tooltip is shown."
            }
        ]
    },
    "ptMethodOptions": {
        "label": "TooltipPassThroughMethodOptions",
        "shortLabel": "PtMethodOptions",
        "description": "Custom passthrough(pt) option method.",
        "relatedProp": "",
        "callbacks": [],
        "values": [
            {
                "name": "props",
                "optional": false,
                "readonly": false,
                "type": "TooltipProps"
            },
            {
                "name": "state",
                "optional": false,
                "readonly": false,
                "type": "TooltipState"
            },
            {
                "name": "context",
                "optional": false,
                "readonly": false,
                "type": "TooltipContext"
            }
        ]
    },
    "ptOptions": {
        "label": "TooltipPassThroughOptions",
        "shortLabel": "PtOptions",
        "description": "Custom passthrough(pt) options.",
        "relatedProp": "pt",
        "callbacks": [],
        "values": [
            {
                "name": "root",
                "optional": true,
                "readonly": false,
                "type": "Div",
                "description": "Uses to pass attributes to the root's DOM element."
            },
            {
                "name": "arrow",
                "optional": true,
                "readonly": false,
                "type": "Div",
                "description": "Uses to pass attributes to the arrow's DOM element."
            },
            {
                "name": "text",
                "optional": true,
                "readonly": false,
                "type": "LI",
                "description": "Uses to pass attributes to the text's DOM element."
            }
        ]
    },
    "meta": {
        "RootType": "Div",
        "omitAttributes": "'style'",
        "icon": false,
        "tooltip": false,
        "svelteComponent": false
    },
    "types": {
        "label": "Props types",
        "shortLabel": "Props types",
        "description": "Defines types used by properties of the Tooltip component.",
        "values": []
    },
    "ptContext": {
        "label": "TooltipContext",
        "shortLabel": "Context",
        "description": "Defines current inline context in Tooltip component.",
        "relatedProp": "",
        "callbacks": [],
        "values": [
            {
                "name": "right",
                "optional": false,
                "readonly": false,
                "type": "boolean",
                "description": "Right aligned tooltip as a boolean."
            },
            {
                "name": "left",
                "optional": false,
                "readonly": false,
                "type": "boolean",
                "description": "Right aligned tooltip as a boolean."
            },
            {
                "name": "top",
                "optional": false,
                "readonly": false,
                "type": "boolean",
                "description": "Right aligned tooltip as a boolean."
            },
            {
                "name": "bottom",
                "optional": false,
                "readonly": false,
                "type": "boolean",
                "description": "Right aligned tooltip as a boolean."
            }
        ]
    },
    "state": {
        "label": "TooltipState",
        "description": "Defines current inline state in Tooltip component.",
        "relatedProp": "",
        "callbacks": [],
        "values": [
            {
                "name": "visible",
                "optional": false,
                "readonly": false,
                "type": "boolean",
                "description": "Current visible state as a boolean."
            },
            {
                "name": "position",
                "optional": false,
                "readonly": false,
                "type": "string",
                "description": "Current position state as a string."
            },
            {
                "name": "class",
                "optional": false,
                "readonly": false,
                "type": "string",
                "description": "Current class state as a string."
            }
        ]
    }
}
